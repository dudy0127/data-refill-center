spring:
  application:
    name: datarefillcenter
  profiles:
    active: dev

server:
  tomcat:
    uri-encoding: UTF-8
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/javascript,text/css,text/xml,text/plain
    min-response-size: 2048
  servlet:
    path: /


logging:
  file: ${spring.application.name}.log
  level:
    root: info


---
spring:
  profiles: dev
  datasource:

    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.72.100:3306/datacenter?useUnicode=true&characterEncoding=utf-8&verifyServerCertificate=false&useSSL=true
    username: root
    password: 123456
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000

     # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
server:
    port: 7000
